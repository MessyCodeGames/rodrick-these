<section class="flex flex-col justify-between items-center">
  <div data-controller="siu" class="flex flex-col items-center text-center gap-8 mt-8">
    <!-- <h1>GG EASY NOOB!</h1> -->
    <div class="text-wrapper">
      <h1 class="text-6xl gg drop-shadow-2xl stroke-black">BRAVO
        <span class="text-5xl noob stroke-black">DOCTEUR G.!</span>
      </h1>
      <h1 class="text-6xl gg drop-shadow-2xl">BRAVO
        <span class="text-5xl noob">DOCTEUR G.!</span>
      </h1>
    </div>
    <button data-action="click->siu#unMute" class="p-4 bg-[#3AFF3A] mt-4 flex flex-row items-center gap-2 confettis-btn rounded-3xl text-xl drop-shadow-xl">
      <svg class="w-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M499.1 6.3c8.1 6 12.9 15.6 12.9 25.7l0 72 0 264c0 44.2-43 80-96 80s-96-35.8-96-80s43-80 96-80c11.2 0 22 1.6 32 4.6L448 147 192 223.8 192 432c0 44.2-43 80-96 80s-96-35.8-96-80s43-80 96-80c11.2 0 22 1.6 32 4.6L128 200l0-72c0-14.1 9.3-26.6 22.8-30.7l320-96c9.7-2.9 20.2-1.1 28.3 5z"/></svg>
      Mets le son !
    </button>

    <%= image_tag 'echarpe_asse.png', alt:'', class:'scarf-anim drop-shadow-xl px-8'%>
    <%= video_tag 'audrick_photos_1.mp4', id: 'audrickVideo', autoplay: true, controls: true, class: 'your-video-class' %>
    <p class="text-white text-xl px-8">Bravo! Clique sur les bouilles pour lire les messages!</p>

    <% @friends.each_with_index do |friend, index| %>
      <div class="flex text-white relative px-8">
        <div data-controller="toggle" class="flex flex-col gap-4">
          <div class="flex w-full <%= index.even? ? 'justify-start' : 'justify-end' %>">
            <div class="peeps drop-shadow-xl flex-shrink-0 <%= index.even? ? 'peeps-anim' : 'peeps-anim-reverse' %>">
              <%= image_tag friend.avatar, alt: "", class: "w-24 h-auto mt-4 rounded-full cursor-pointer", data: { action: "click->toggle#fire" } %>
              <% if index.even? %>
                <%= image_tag 'luffy_chapeau.png', alt: "", class: "w-24 h-auto absolute -top-2 rotate-12 left-3" %>
              <% else %>
                <%= image_tag 'luffy_chapeau.png', alt: "", class: "w-24 h-auto absolute -top-2 rotate-12 -right-3" %>
              <% end %>
            </div>
          </div>

          <div data-toggle-target="togglableElement" class="w-full smooth-toggle togglable-element text-center">
            <p class="text-2xl font-bold <%= index.even? ? 'text-left' : 'text-right' %> "><%= friend.name %>:</p>
            <p class="shadow-2xl text-xl text-center bg-[#FFC510] text-black p-4 rounded-xl"><%= friend.message %></p>
          </div>
        </div>
      </div>
    <% end %>

    <div data-controller="dick" class="flex flex-col gap-4 ">
      <p data-action="click->dick#fire" class="mx-auto text-black text-bold text-2xl p-4 bg-[#3AFF3A] mt-4 drop-shadow-xl">Derni√®re surprise, clique ici! </p>
      <div data-dick-target="togglableElement" class="w-full smooth-toggle togglable-element">
        <%= image_tag 'penis.png', alt:'', class:'drop-shadow-2xl mb-8 dick-anim origin-top-right px-8 ' %>
      </div>
    </div>
  </div>
  <!-- <%= image_tag 'trotinette.png', alt: '', class: 'loic-dynamic' %>
  <%= image_tag 'trotinette.png', alt: '', class: 'loic-dynamic-right' %> -->
</section>


<style>
.smooth-toggle {
  transition: opacity 0.5s ease, visibility 0.5s ease;
}

.togglable-element {
  overflow: hidden;
  transition: height 0.3s ease;
  height: 0;
}

.togglable-element.expanded {
  height: auto; /* This will be dynamically set by JavaScript */
}

/* * {border: 1px red solid} */
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const peepsElements = document.querySelectorAll('.peeps');

    peepsElements.forEach(peeps => {
      peeps.addEventListener('click', () => {
        peeps.classList.toggle('active');
      });
    });
  });

  const fireBtn = document.querySelector(".confettis-btn");

  fireBtn.addEventListener("click", () => {
    const duration = 15 * 1000,
      animationEnd = Date.now() + duration,
      defaults = { startVelocity: 20, spread: 100, ticks: 15, zIndex: 0 };

    function randomInRange(min, max) {
      return Math.random() * (max - min) + min;
    }

    const interval = setInterval(function () {
      const timeLeft = animationEnd - Date.now();

      if (timeLeft <= 0) {
        return clearInterval(interval);
      }

      const particleCount = 20 * (timeLeft / duration);

      confetti(
        Object.assign({}, defaults, {
          particleCount,
          origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 },
        })
      );
      confetti(
        Object.assign({}, defaults, {
          particleCount,
          origin: { x: randomInRange(0.5, 0.7), y: Math.random() - 0.2 },
        })
      );
    }, 250);
  });
</script>
